import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as t,o as l}from"./app-DGvx70_a.js";const n="/iDoc/assets/%E5%9B%BE%E7%89%871-mEalBVt0.png",e={};function h(p,i){return l(),a("div",null,i[0]||(i[0]=[t(`<h1 id="_01-java基础" tabindex="-1"><a class="header-anchor" href="#_01-java基础"><span>01 - java基础</span></a></h1><h2 id="_1-java概述" tabindex="-1"><a class="header-anchor" href="#_1-java概述"><span>1. Java概述</span></a></h2><h3 id="_1-1-java语言发展史-了解" tabindex="-1"><a class="header-anchor" href="#_1-1-java语言发展史-了解"><span>1.1 Java语言发展史（了解）</span></a></h3><p>语言：人与人交流沟通的表达方式</p><p>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言</p><p>Java语言是美国Sun公司（Stanford University Network）在1995年推出的计算机语言</p><p>Java之父：詹姆斯·高斯林（James Gosling）</p><p>2009年，Sun公司被甲骨文公司收购，所以我们现在访问oracle官网即可：<a href="https://www.oracle.com/" target="_blank" rel="noopener noreferrer">https://www.oracle.com</a></p><p>当前，我们课程使用的JDK版本：11.0</p><h3 id="_1-2-java语言跨平台原理-理解" tabindex="-1"><a class="header-anchor" href="#_1-2-java语言跨平台原理-理解"><span>1.2 Java语言跨平台原理（理解）</span></a></h3><p>Java程序并非是直接运行的，Java编译器将Java源程序编译成与平台无关的字节码文件(class文件)，然后由Java虚拟机（JVM）对字节码文件解释执行。所以在不同的操作系统下，只需安装不同的Java虚拟机即可实现java程序的跨平台。</p><h3 id="_1-3-jre和jdk-记忆" tabindex="-1"><a class="header-anchor" href="#_1-3-jre和jdk-记忆"><span>1.3 JRE和JDK（记忆）</span></a></h3><p>JVM（Java Virtual Machine），Java虚拟机</p><p>JRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）</p><p>JDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具</p><p>总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。</p><h3 id="_1-4-jdk的下载和安装-应用" tabindex="-1"><a class="header-anchor" href="#_1-4-jdk的下载和安装-应用"><span>1.4 JDK的下载和安装（应用）</span></a></h3><h4 id="_1-4-1-下载" tabindex="-1"><a class="header-anchor" href="#_1-4-1-下载"><span>1.4.1 下载</span></a></h4><p>通过官方网站获取JDK</p><p><a href="http://www.oracle.com/" target="_blank" rel="noopener noreferrer">http://www.oracle.com</a></p><p><strong>注意</strong>：针对不同的操作系统，需要下载对应版本的JDK。</p><p>具体下载步骤请参见《JDK下载及安装说明文档》</p><h4 id="_1-4-2-安装" tabindex="-1"><a class="header-anchor" href="#_1-4-2-安装"><span>1.4.2 安装</span></a></h4><p>傻瓜式安装，下一步即可。但默认的安装路径是在C:\\Program Files下，为方便统一管理建议修改安装路径，将与开发相关的软件都安装到一个目录下，例如：E:\\develop。</p><p><strong>注意</strong>：安装路径不要包含中文或者空格等特殊字符（使用纯英文目录）。</p><p>具体安装步骤请参见《JDK下载及安装说明文档》</p><h4 id="_1-4-3-jdk的安装目录介绍" tabindex="-1"><a class="header-anchor" href="#_1-4-3-jdk的安装目录介绍"><span>1.4.3 JDK的安装目录介绍</span></a></h4><table><thead><tr><th>目录名称</th><th>说明</th></tr></thead><tbody><tr><td>bin</td><td>该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。</td></tr><tr><td>conf</td><td>该路径下存放了JDK的相关配置文件。</td></tr><tr><td>include</td><td>该路径下存放了一些平台特定的头文件。</td></tr><tr><td>jmods</td><td>该路径下存放了JDK的各种模块。</td></tr><tr><td>legal</td><td>该路径下存放了JDK各模块的授权文档。</td></tr><tr><td>lib</td><td>该路径下存放了JDK工具的一些补充JAR包。</td></tr></tbody></table><h2 id="_2-第一个演示程序" tabindex="-1"><a class="header-anchor" href="#_2-第一个演示程序"><span>2. 第一个演示程序</span></a></h2><h3 id="_2-1-常用dos命令-应用" tabindex="-1"><a class="header-anchor" href="#_2-1-常用dos命令-应用"><span>2.1 常用DOS命令（应用）</span></a></h3><p>在接触集成开发环境之前，我们需要使用命令行窗口对java程序进行编译和运行，所以需要知道一些常用DOS命令。</p><p>1、打开命令行窗口的方式：win + r打开运行窗口，输入cmd，回车。</p><p>2、常用命令及其作用</p><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>盘符名称:</td><td>盘符切换。E:回车，表示切换到E盘。</td></tr><tr><td>dir</td><td>查看当前路径下的内容。</td></tr><tr><td>cd 目录</td><td>进入单级目录。cd itheima</td></tr><tr><td>cd ..</td><td>回退到上一级目录。</td></tr><tr><td>cd 目录1\\目录2...</td><td>进入多级目录。cd itheima\\JavaSE</td></tr><tr><td>cd \\</td><td>回退到盘符目录。</td></tr><tr><td>cls</td><td>清屏。</td></tr><tr><td>exit</td><td>退出命令提示符窗口。</td></tr></tbody></table><h3 id="_2-2-path环境变量的配置-应用" tabindex="-1"><a class="header-anchor" href="#_2-2-path环境变量的配置-应用"><span>2.2 Path环境变量的配置（应用）</span></a></h3><h4 id="_2-2-1-为什么配置环境变量" tabindex="-1"><a class="header-anchor" href="#_2-2-1-为什么配置环境变量"><span>2.2.1 为什么配置环境变量</span></a></h4><p>开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在该目录下执行。我们不可能把所有的java文件都放到JDK的bin目录下，所以配置环境变量的作用就是可以使bin目录下的java相关命令可以在任意目录下使用。</p><h4 id="_2-2-2-配置环境变量步骤" tabindex="-1"><a class="header-anchor" href="#_2-2-2-配置环境变量步骤"><span>2.2.2 配置环境变量步骤</span></a></h4><p>具体配置步骤请参见《Java环境变量配置说明》文档。</p><h3 id="_2-3-helloworld案例-应用" tabindex="-1"><a class="header-anchor" href="#_2-3-helloworld案例-应用"><span>2.3 HelloWorld案例（应用）</span></a></h3><p>HelloWorld案例是指在计算机屏幕上输出“HelloWorld”这行文字。各种计算机语言都习惯使用该案例作为第一个演示案例。</p><h4 id="_2-3-1-java程序开发运行流程" tabindex="-1"><a class="header-anchor" href="#_2-3-1-java程序开发运行流程"><span>2.3.1 Java程序开发运行流程</span></a></h4><p>开发Java程序，需要三个步骤：编写程序，编译程序，运行程序。</p><h4 id="_2-3-2-helloworld案例的编写" tabindex="-1"><a class="header-anchor" href="#_2-3-2-helloworld案例的编写"><span>2.3.2 HelloWorld案例的编写</span></a></h4><p>1、新建文本文档文件，修改名称为HelloWorld.java。</p><p>2、用记事本打开HelloWorld.java文件，输写程序内容。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HelloWorld</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">		System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;HelloWorld&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-3-helloworld案例的编译和运行" tabindex="-1"><a class="header-anchor" href="#_2-3-3-helloworld案例的编译和运行"><span>2.3.3 HelloWorld案例的编译和运行</span></a></h4><p>存文件，打开命令行窗口，将目录切换至java文件所在目录，编译java文件生成class文件，运行class文件。</p><blockquote><p>编译：javac 文件名.java</p><p>范例：javac HelloWorld.java</p><p>执行：java 类名</p><p>范例：java HelloWorld</p></blockquote><h3 id="_2-4-helloworld案例常见问题-理解" tabindex="-1"><a class="header-anchor" href="#_2-4-helloworld案例常见问题-理解"><span>2.4 HelloWorld案例常见问题（理解）</span></a></h3><h4 id="_2-4-1-bug" tabindex="-1"><a class="header-anchor" href="#_2-4-1-bug"><span>2.4.1 BUG</span></a></h4><p>在电脑系统或程序中，隐藏着的一些未被发现的缺陷或问题统称为bug（漏洞）。</p><h4 id="_2-4-2-bug的解决" tabindex="-1"><a class="header-anchor" href="#_2-4-2-bug的解决"><span>2.4.2 BUG的解决</span></a></h4><p>1、具备识别BUG的能力：多看</p><p>2、具备分析BUG的能力：多思考，多查资料</p><p>3、具备解决BUG的能力：多尝试，多总结</p><h4 id="_2-4-3-helloworld案例常见问题" tabindex="-1"><a class="header-anchor" href="#_2-4-3-helloworld案例常见问题"><span>2.4.3 HelloWorld案例常见问题</span></a></h4><p>1、非法字符问题。Java中的符号都是英文格式的。</p><p>2、大小写问题。Java语言对大小写敏感（区分大小写）。</p><p>3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。</p><p>4、编译命令后的java文件名需要带文件后缀.java</p><p>5、运行命令后的class文件名（类名）不带文件后缀.class</p><p>...</p><h3 id="_2-5-notepad-软件的安装和使用-应用" tabindex="-1"><a class="header-anchor" href="#_2-5-notepad-软件的安装和使用-应用"><span>2.5 Notepad++软件的安装和使用（应用）</span></a></h3><h4 id="_2-5-1-什么要使用notepad-软件" tabindex="-1"><a class="header-anchor" href="#_2-5-1-什么要使用notepad-软件"><span>2.5.1 什么要使用Notepad++软件</span></a></h4><p>Notepad++功能比windows中的自带记事本功能强大，除了可以用来制作一般的纯文字说明文件，也十分适合编写计算机程序代码。Notepad++有行号，能够快速定位问题位置，还有语法高亮度显示、代码折叠等功能。而且它是免费的。</p><h4 id="_2-5-2-notepad-软件安装" tabindex="-1"><a class="header-anchor" href="#_2-5-2-notepad-软件安装"><span>2.5.2 Notepad++软件安装</span></a></h4><p>安装：傻瓜式安装，一直下一步即可。建议也安装到统一的开发软件目录下，比如E:\\develop。</p><p>具体安装步骤请参见《Nodepad++软件安装及配置说明》文档。</p><h4 id="_2-5-3notepad-软件配置" tabindex="-1"><a class="header-anchor" href="#_2-5-3notepad-软件配置"><span>2.5.3Notepad++软件配置</span></a></h4><p>安装完毕之后，为了使用方便，做一个简单的配置：修改默认语言和编码。</p><p>具体配置的说明请参见《Nodepad++软件安装及配置说明》文档。</p><h2 id="_3-java基础语法" tabindex="-1"><a class="header-anchor" href="#_3-java基础语法"><span>3. java基础语法</span></a></h2><h4 id="_3-1-注释-理解" tabindex="-1"><a class="header-anchor" href="#_3-1-注释-理解"><span>3.1 注释（理解）</span></a></h4><p>注释是对代码的解释和说明文字，可以提高程序的可读性，因此在程序中添加必要的注释文字十分重要。Java中的注释分为三种：</p><p>单行注释。单行注释的格式是使用//，从//开始至本行结尾的文字将作为注释文字。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 这是单行注释文字</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>多行注释。多行注释的格式是使用/* 和 */将一段较长的注释括起来。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">这是多行注释文字</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">这是多行注释文字</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">这是多行注释文字</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">*/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">注意：多行注释不能嵌套使用。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文档注释。文档注释以<code>/**</code>开始，以<code>*/</code>结束。（以后讲）</p><h4 id="_3-2-关键字-理解" tabindex="-1"><a class="header-anchor" href="#_3-2-关键字-理解"><span>3.2 关键字（理解）</span></a></h4><p>关键字是指被java语言赋予了特殊含义的单词。</p><p>关键字的特点：</p><p>​ 关键字的字母全部小写。</p><p>​ 常用的代码编辑器对关键字都有高亮显示，比如现在我们能看到的public、class、static等。</p><h4 id="_3-3-常量-应用" tabindex="-1"><a class="header-anchor" href="#_3-3-常量-应用"><span>3.3 常量（应用）</span></a></h4><p>常量：在程序运行过程中，其值不可以发生改变的量。</p><p>Java中的常量分类：</p><p>​ 字符串常量 用双引号括起来的多个字符（可以包含0个、一个或多个），例如&quot;a&quot;、&quot;abc&quot;、&quot;中国&quot;等</p><p>​ 整数常量 整数，例如：-10、0、88等</p><p>​ 小数常量 小数，例如：-5.5、1.0、88.88等</p><p>​ 字符常量 用单引号括起来的一个字符，例如：&#39;a&#39;、&#39;5&#39;、&#39;B&#39;、&#39;中&#39;等</p><p>​ 布尔常量 布尔值，表示真假，只有两个值true和false</p><p>​ 空常量 一个特殊的值，空值，值为null</p><p>除空常量外，其他常量均可使用输出语句直接输出。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Demo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 输出一个整数</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 输出一个小数</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 输出一个字符</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 输出boolean值true</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;欢迎来到黑马程序员&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 输出字符串</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-4-数据类型-记忆、应用" tabindex="-1"><a class="header-anchor" href="#_3-4-数据类型-记忆、应用"><span>3.4 数据类型（记忆、应用）</span></a></h4><h5 id="_3-4-1-计算机存储单元" tabindex="-1"><a class="header-anchor" href="#_3-4-1-计算机存储单元"><span>3.4.1 计算机存储单元</span></a></h5><p>我们知道计算机是可以用来存储数据的，但是无论是内存还是硬盘，计算机存储设备的最小信息单元叫“位（bit）”，我们又称之为“比特位”，通常用小写的字母”b”表示。而计算机中最基本的存储单元叫“字节（byte）”，</p><p>通常用大写字母”B”表示，字节是由连续的8个位组成。</p><p>除了字节外还有一些常用的存储单位，其换算单位如下：</p><p>1B（字节） = 8bit</p><p>1KB = 1024B</p><p>1MB = 1024KB</p><p>1GB = 1024MB</p><p>1TB = 1024GB</p><h5 id="_3-4-2-java中的数据类型" tabindex="-1"><a class="header-anchor" href="#_3-4-2-java中的数据类型"><span>3.4.2 Java中的数据类型</span></a></h5><p>Java是一个强类型语言，Java中的数据必须明确数据类型。在Java中的数据类型包括基本数据类型和引用数据类型两种。</p><p>Java中的基本数据类型：</p><table><thead><tr><th style="text-align:left;">数据类型</th><th>关键字</th><th>内存占用</th><th style="text-align:left;">取值范围</th></tr></thead><tbody><tr><td style="text-align:left;">整数类型</td><td>byte</td><td>1</td><td style="text-align:left;">-128~127</td></tr><tr><td style="text-align:left;"></td><td>short</td><td>2</td><td style="text-align:left;">-32768~32767</td></tr><tr><td style="text-align:left;"></td><td>int(默认)</td><td>4</td><td style="text-align:left;">-2的31次方到2的31次方-1</td></tr><tr><td style="text-align:left;"></td><td>long</td><td>8</td><td style="text-align:left;">-2的63次方到2的63次方-1</td></tr><tr><td style="text-align:left;">浮点类型</td><td>float</td><td>4</td><td style="text-align:left;">负数：-3.402823E+38到-1.401298E-45 正数： 1.401298E-45到3.402823E+38</td></tr><tr><td style="text-align:left;"></td><td>double(默认)</td><td>8</td><td style="text-align:left;">负数：-1.797693E+308到-4.9000000E-324 正数：4.9000000E-324 到1.797693E+308</td></tr><tr><td style="text-align:left;">字符类型</td><td>char</td><td>2</td><td style="text-align:left;">0-65535</td></tr><tr><td style="text-align:left;">布尔类型</td><td>boolean</td><td>1</td><td style="text-align:left;">true，false</td></tr></tbody></table><p>说明：</p><p>​ e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p><p>​ 在java中整数默认是int类型，浮点数默认是double类型。</p><h4 id="_3-5-变量-应用" tabindex="-1"><a class="header-anchor" href="#_3-5-变量-应用"><span>3.5 变量（应用）</span></a></h4><h5 id="_3-5-1-变量的定义" tabindex="-1"><a class="header-anchor" href="#_3-5-1-变量的定义"><span>3.5.1 变量的定义</span></a></h5><p>变量：在程序运行过程中，其值可以发生改变的量。</p><p>从本质上讲，变量是内存中的一小块区域，其值可以在一定范围内变化。</p><p>变量的定义格式：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">数据类型 变量名 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> 初始化值</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 声明变量并赋值</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(age);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 先声明，后赋值（使用前赋值即可）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">数据类型 变量名</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">变量名 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> 初始化值</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">double</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">money </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 55.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(money);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还可以在同一行定义多个同一种数据类型的变量，中间使用逗号隔开。但不建议使用这种方式，降低程序的可读性。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 定义int类型的变量a和b，中间使用逗号隔开</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(a);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(b);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> c</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 声明int类型的变量c和d，中间使用逗号隔开</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">d </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(c);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(d);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>变量的使用：通过变量名访问即可。</p><h5 id="_3-5-2-使用变量时的注意事项" tabindex="-1"><a class="header-anchor" href="#_3-5-2-使用变量时的注意事项"><span>3.5.2 使用变量时的注意事项</span></a></h5><ol><li>在同一对花括号中，变量名不能重复。</li><li>变量在使用之前，必须初始化（赋值）。</li><li>定义long类型的变量时，需要在整数的后面加L（大小写均可，建议大写）。因为整数默认是int类型，整数太大可能超出int范围。</li><li>定义float类型的变量时，需要在小数的后面加F（大小写均可，建议大写）。因为浮点数的默认类型是double， double的取值范围是大于float的，类型不兼容。</li></ol><h4 id="_3-6-标识符-记忆、理解" tabindex="-1"><a class="header-anchor" href="#_3-6-标识符-记忆、理解"><span>3.6 标识符（记忆、理解）</span></a></h4><p>标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。</p><p>Java中标识符的组成规则：</p><p>​ 由字母、数字、下划线“_”、美元符号“$”组成，第一个字符不能是数字。</p><p>​ 不能使用java中的关键字作为标识符。</p><p>​ 标识符对大小写敏感（区分大小写）。</p><p>Java中标识符的命名约定：</p><p>​ 小驼峰式命名：变量名、方法名</p><p>​ 首字母小写，从第二个单词开始每个单词的首字母大写。</p><p>​ 大驼峰式命名：类名</p><p>​ 每个单词的首字母都大写。</p><p>​ 另外，标识符的命名最好可以做到见名知意</p><p>​ 例如：username、studentNumber等。</p><h4 id="_3-7-类型转换-理解" tabindex="-1"><a class="header-anchor" href="#_3-7-类型转换-理解"><span>3.7 类型转换（理解）</span></a></h4><p>在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。</p><p>自动类型转换：</p><p>​ 把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">double</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> num </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 将int类型的10直接赋值给double类型</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(num);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 输出10.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>强制类型转换：</p><p>​ 把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。</p><p>​ 强制类型转换格式：目标数据类型 变量名 = (目标数据类型)值或者变量;</p><p>​ 例如：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">double</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> num1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> num2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) num1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 将double类型的num1强制转换为int类型</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(num2);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 输出5（小数位直接舍弃）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+n+`" alt="1543196882672" tabindex="0" loading="lazy"><figcaption>1543196882672</figcaption></figure><p>说明：</p><ol><li>char类型的数据转换为int类型是按照码表中对应的int值进行计算的。比如在ASCII码表中，&#39;a&#39;对应97。</li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;a&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(a);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 将输出97</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>整数默认是int类型，byte、short和char类型数据参与运算均会自动转换为int类型。</li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> b1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> b2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> b3 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 第三行代码会报错，b1和b2会自动转换为int类型，计算结果为int，int赋值给byte需要强制类型转换。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 修改为:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> num </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 或者：</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> b3 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) (b1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b2)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>boolean类型不能与其他基本数据类型相互转换。</li></ol>`,157)]))}const r=s(e,[["render",h],["__file","01-java基础语法.html.vue"]]),g=JSON.parse('{"path":"/Java/01-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.html","title":"01 - java基础","lang":"zh-CN","frontmatter":{"description":"01 - java基础 1. Java概述 1.1 Java语言发展史（了解） 语言：人与人交流沟通的表达方式 计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言 Java语言是美国Sun公司（Stanford University Network）在1995年推出的计算机语言 Java之父：詹姆斯·高斯林（James Gosling） 2009...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/iDoc/Java/01-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"IDoc"}],["meta",{"property":"og:title","content":"01 - java基础"}],["meta",{"property":"og:description","content":"01 - java基础 1. Java概述 1.1 Java语言发展史（了解） 语言：人与人交流沟通的表达方式 计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言 Java语言是美国Sun公司（Stanford University Network）在1995年推出的计算机语言 Java之父：詹姆斯·高斯林（James Gosling） 2009..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-26T15:44:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-26T15:44:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"01 - java基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-26T15:44:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"NamelessK\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"1. Java概述","slug":"_1-java概述","link":"#_1-java概述","children":[{"level":3,"title":"1.1 Java语言发展史（了解）","slug":"_1-1-java语言发展史-了解","link":"#_1-1-java语言发展史-了解","children":[]},{"level":3,"title":"1.2 Java语言跨平台原理（理解）","slug":"_1-2-java语言跨平台原理-理解","link":"#_1-2-java语言跨平台原理-理解","children":[]},{"level":3,"title":"1.3 JRE和JDK（记忆）","slug":"_1-3-jre和jdk-记忆","link":"#_1-3-jre和jdk-记忆","children":[]},{"level":3,"title":"1.4 JDK的下载和安装（应用）","slug":"_1-4-jdk的下载和安装-应用","link":"#_1-4-jdk的下载和安装-应用","children":[]}]},{"level":2,"title":"2. 第一个演示程序","slug":"_2-第一个演示程序","link":"#_2-第一个演示程序","children":[{"level":3,"title":"2.1 常用DOS命令（应用）","slug":"_2-1-常用dos命令-应用","link":"#_2-1-常用dos命令-应用","children":[]},{"level":3,"title":"2.2 Path环境变量的配置（应用）","slug":"_2-2-path环境变量的配置-应用","link":"#_2-2-path环境变量的配置-应用","children":[]},{"level":3,"title":"2.3 HelloWorld案例（应用）","slug":"_2-3-helloworld案例-应用","link":"#_2-3-helloworld案例-应用","children":[]},{"level":3,"title":"2.4 HelloWorld案例常见问题（理解）","slug":"_2-4-helloworld案例常见问题-理解","link":"#_2-4-helloworld案例常见问题-理解","children":[]},{"level":3,"title":"2.5 Notepad++软件的安装和使用（应用）","slug":"_2-5-notepad-软件的安装和使用-应用","link":"#_2-5-notepad-软件的安装和使用-应用","children":[]}]},{"level":2,"title":"3. java基础语法","slug":"_3-java基础语法","link":"#_3-java基础语法","children":[]}],"git":{"createdTime":1732634123000,"updatedTime":1732635840000,"contributors":[{"name":"niuyafeng777","email":"1625099286@qq.com","commits":2}]},"readingTime":{"minutes":11.55,"words":3464},"filePathRelative":"Java/01-java基础语法.md","localizedDate":"2024年11月26日","excerpt":"\\n<h2>1. Java概述</h2>\\n<h3>1.1 Java语言发展史（了解）</h3>\\n<p>语言：人与人交流沟通的表达方式</p>\\n<p>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言</p>\\n<p>Java语言是美国Sun公司（Stanford University Network）在1995年推出的计算机语言</p>\\n<p>Java之父：詹姆斯·高斯林（James Gosling）</p>\\n<p>2009年，Sun公司被甲骨文公司收购，所以我们现在访问oracle官网即可：<a href=\\"https://www.oracle.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.oracle.com</a></p>","autoDesc":true}');export{r as comp,g as data};
